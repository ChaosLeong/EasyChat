package org.zhj.easychat.database;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import org.zhj.easychat.database.User;
import org.zhj.easychat.database.ChatMessage;
import org.zhj.easychat.database.Friend;
import org.zhj.easychat.database.Comment;

import org.zhj.easychat.database.UserDao;
import org.zhj.easychat.database.ChatMessageDao;
import org.zhj.easychat.database.FriendDao;
import org.zhj.easychat.database.CommentDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig chatMessageDaoConfig;
    private final DaoConfig friendDaoConfig;
    private final DaoConfig commentDaoConfig;

    private final UserDao userDao;
    private final ChatMessageDao chatMessageDao;
    private final FriendDao friendDao;
    private final CommentDao commentDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        chatMessageDaoConfig = daoConfigMap.get(ChatMessageDao.class).clone();
        chatMessageDaoConfig.initIdentityScope(type);

        friendDaoConfig = daoConfigMap.get(FriendDao.class).clone();
        friendDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        chatMessageDao = new ChatMessageDao(chatMessageDaoConfig, this);
        friendDao = new FriendDao(friendDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(ChatMessage.class, chatMessageDao);
        registerDao(Friend.class, friendDao);
        registerDao(Comment.class, commentDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        chatMessageDaoConfig.getIdentityScope().clear();
        friendDaoConfig.getIdentityScope().clear();
        commentDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public ChatMessageDao getChatMessageDao() {
        return chatMessageDao;
    }

    public FriendDao getFriendDao() {
        return friendDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

}
